#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Carp::Always;
use Data::Dumper;
use DateTime;
use REST::Client;
use MIME::Base64;

use Atl::Jira::Issues;

my @start_date;
my @end_date;
my $username;
my $password;
my $sprint_name;
my @issues;
my $query;
my $dir_name;

GetOptions(
    "start_date=s{5}" => \@start_date,
    "end_date=s{5}"   => \@end_date,
    "username=s"      => \$username,
    "password=s"      => \$password,
    "sprint_name=s"   => \$sprint_name,

    # "issues=s{1,}"    => \@issues,
    "dir_name=s" => \$dir_name,
    "query=s"    => \$query,
);

__PACKAGE__->run() unless caller;

sub run {
    ### Request client.
    my $client = REST::Client->new();
    $client->{username}     = $username;
    $client->{password}     = $password;
    $client->{auth_headers} = {
        Accept        => 'application/json',
        Authorization => 'Basic '
            . encode_base64( $username . ':' . $password ),
        'Content-Type' => 'application/json',
    };

    $client->setHost('https://jira.cpanel.net');
    ### Create issues object and get list of top level issue list.
    my $name = $sprint_name // $dir_name;
    my ( $start_date, $start_datetime, $end_date, $end_datetime )
        = date_setup( \@start_date, \@end_date );
    my $issues
        = Timelines::Jira::Issues->new( client => $client, query_name => $name );
    ### Get the issue bodies and changelogs. Does not retrieve subtasks.
    my $jira_query = $query // "Sprint = $sprint_name";
    $issues->get_issue_list( { jira_query => $jira_query } );
    $issues->get_issues()

        # ### Get the issue subtasks.
        # $issues->get_subtasks($client);

}

sub date_setup {
	my $start_date = shift;
	my $end_date = shift;
    my ( $end_datetime, $start_datetime );
    $end_datetime = DateTime->new(
        year   => $end_date->[0],
        month  => $end_date->[1],
        day    => $end_date->[2],
        hour   => $end_date->[3],
        minute => $end_date->[4]
    ) if $end_date->[0];
    $end_date = {
        year   => $sprint->{end_datetime}->year,
        month  => $sprint->{end_datetime}->month,
        day    => $sprint->{end_datetime}->day,
        hour   => $sprint->{end_datetime}->hour,
        minute => $sprint->{end_datetime}->minute
        }
        if @end_date;

}
